<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
 
  <!-- springmvc前端控制器 -->
  <servlet>
  <servlet-name>springmvc_mybatis</servlet-name>
  <servlet-class>org.springframework.web.servlet.DispatcherServlet </servlet-class>
  <!--contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器（handlerMapper）适配器等） 
  如果不配置contextConfigLocation,默认加载的是/WEB-INF/servlet名称-servlet.xml（springmvc-servlet.xml）
   -->
   <init-param>
   <param-name>contextConfigLocation</param-name>
   <param-value>classpath:spring/springmvc.xml</param-value>
   </init-param>
  </servlet>
  <servlet-mapping>
  <servlet-name>springmvc_mybatis</servlet-name>
  <!-- 
  第一种:*.action,访问以.action结尾由DispatcherServlet进行解析
  第二种：/,所有访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析 
  使用此种方式可以实现RESTful风格的url
 第三种：/*,这样配置不对，使用这种配置，最终要转发到一个jsp页面时，
 仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到 handler会报错
 第三种：/*,这样配置不对，
   -->
   <url-pattern>*.action</url-pattern>
  <url-pattern></url-pattern>
  </servlet-mapping>
  
  <!--  -->
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>