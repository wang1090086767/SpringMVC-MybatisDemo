<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
			
<!--=============================================================================  --> 
	
	<!--可以扫描controller，service。。. 这里扫描指定的包 -->
	<context:component-scan base-package="cn.example.ssm.controller">
	</context:component-scan>
	<!--注解映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
	<!--注解适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHan 
		dlerAdapter"/> -->
			
<!--=============================================================================  --> 
	
	<!-- 使用 mvc:annotation-driven标签可以代替上面注解映射器和注解适配器的配置 比如json解析器就默认加载了 注入转化器conversion 
		注入校验器 validator -->
	<mvc:annotation-driven validator="validator"
		conversion-service="conversionService"></mvc:annotation-driven>
	<!-- 自定义参数的绑定 -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!--转换器 -->
		<property name="converters">
			<list>
				<!-- 日期格式的转换 -->
				<bean class="cn.example.ssm.converter.CustomDateConverter" />
			</list>
		</property>
	</bean>
		
<!--=============================================================================  --> 
	
	<!-- 校验器 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- hibernate校验器 -->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator">
		</property>
		<!-- 指定校验使用的资源文件，在文件中配置校验错误信息，如不指认则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource"></property>
	</bean>
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名 -->
		<property name="basenames">
			<list>
				<value>
					classpath:CustomValidationMessages
				</value>
			</list>
		</property>
		<!--资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8"></property>
		<property name="defaultEncoding" value="utf-8"></property>
		<!--对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120"></property>
	</bean>
	
<!--=============================================================================  --> 
	
	<!--配置视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>
	<!--全局异常处理器 只要实现HandlerExceptionResolver接口就是全局异常处理器 -->
	<bean class="cn.example.ssm.exception.CustomExceptionResolver"></bean>
		
<!--=============================================================================  --> 
	
	<!-- 配置拦截器 -->
	<mvc:interceptors>
		<!-- 配置多个拦截器 /**表示所有的根路径和子路径 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="cn.example.ssm.interceptor.LoginInterceptor">
			</bean>
		</mvc:interceptor>

	</mvc:interceptors>
		
<!--=============================================================================  --> 
	
	<!-- 配置静态资源解析 -->
	<mvc:resources location="/js/" mapping="/js/**"/>
	<mvc:resources location="/img/" mapping="/img/**"/>
	
<!--=============================================================================  --> 
	
</beans>